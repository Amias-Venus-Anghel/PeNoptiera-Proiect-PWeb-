/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FormDTO } from './FormDTO';
import {
    FormDTOFromJSON,
    FormDTOFromJSONTyped,
    FormDTOToJSON,
} from './FormDTO';

/**
 * 
 * @export
 * @interface FormDTOPagedResponse
 */
export interface FormDTOPagedResponse {
    /**
     * 
     * @type {number}
     * @memberof FormDTOPagedResponse
     */
    page?: number;
    /**
     * 
     * @type {number}
     * @memberof FormDTOPagedResponse
     */
    pageSize?: number;
    /**
     * 
     * @type {number}
     * @memberof FormDTOPagedResponse
     */
    totalCount?: number;
    /**
     * 
     * @type {Array<FormDTO>}
     * @memberof FormDTOPagedResponse
     */
    data?: Array<FormDTO> | null;
}

/**
 * Check if a given object implements the FormDTOPagedResponse interface.
 */
export function instanceOfFormDTOPagedResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FormDTOPagedResponseFromJSON(json: any): FormDTOPagedResponse {
    return FormDTOPagedResponseFromJSONTyped(json, false);
}

export function FormDTOPagedResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormDTOPagedResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'page': !exists(json, 'page') ? undefined : json['page'],
        'pageSize': !exists(json, 'pageSize') ? undefined : json['pageSize'],
        'totalCount': !exists(json, 'totalCount') ? undefined : json['totalCount'],
        'data': !exists(json, 'data') ? undefined : (json['data'] === null ? null : (json['data'] as Array<any>).map(FormDTOFromJSON)),
    };
}

export function FormDTOPagedResponseToJSON(value?: FormDTOPagedResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'page': value.page,
        'pageSize': value.pageSize,
        'totalCount': value.totalCount,
        'data': value.data === undefined ? undefined : (value.data === null ? null : (value.data as Array<any>).map(FormDTOToJSON)),
    };
}

